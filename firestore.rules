rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isContentManager() {
      return isAuthenticated() &&
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'content_manager'
        );
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isCompanyMember(companyId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return isAuthenticated() && (
        user.data.companyId == companyId ||
        user.data.employerCompanyId == companyId ||
        (isEmployer() && (
          user.data.companyId == companyId ||
          exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employer' &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId
        ))
      );
    }

    function canManageRequest(requestData) {
      return isEmployer() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == requestData.companyId;
    }

    function isBroker() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'broker';
    }

    function isEmployer() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employer';
    }

    function canManageEmployees() {
      return isAuthenticated() && (isAdmin() || isEmployer());
    }

    function hasInvitedCompany(companyId) {
      return isAuthenticated() && isBroker() &&
        exists(/databases/$(database)/documents/companies/$(companyId)) &&
        get(/databases/$(database)/documents/companies/$(companyId)).data.invitedBy == request.auth.uid;
    }

    // Companies Collection
    match /companies/{companyId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if isAdmin();
    }

    // Users Collection
    match /users/{userId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if isAdmin();
    }

    // Verifications Collection
    match /verifications/{verificationId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if isAdmin();
    }

    // Keep all other existing rules from the original file
    match /{collection}/{document=**} {
      allow read, write: if 
        collection != 'companies' && 
        collection != 'users' && 
        collection != 'verifications' && 
        request.auth != null && 
        (isAdmin() || isBroker() || isEmployer());
    }
  }
}
